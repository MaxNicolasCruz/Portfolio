"use client"; // üîß Indica que este componente se renderiza del lado del cliente (necesario en Next.js para usar hooks)

// üß© Importaci√≥n de hooks y tipos necesarios
import { useEffect, useMemo, useState } from "react";
import Particles, { initParticlesEngine } from "@tsparticles/react"; // Librer√≠a para renderizar part√≠culas animadas en React
import type { Container, ISourceOptions } from "@tsparticles/engine"; // Tipos para definir opciones y contenedores de part√≠culas
import { loadAll } from "@tsparticles/all"; // Carga todos los presets, plugins y generadores disponibles

// üåå Componente principal que crea un fondo animado con part√≠culas hexagonales din√°micas
export default function HexagonParticles() {
	// üìç Estado que indica si el motor de part√≠culas est√° inicializado
	const [init, setInit] = useState(false);

	// ‚öôÔ∏è Efecto que inicializa el motor de part√≠culas al montar el componente
	useEffect(() => {
		initParticlesEngine(async (engine) => {
			await loadAll(engine); // üëà Carga todas las funciones, incluidas las trayectorias poligonales
		}).then(() => setInit(true)); // ‚úÖ Una vez cargado, activa el renderizado de part√≠culas
	}, []);

	// üé® Paleta de colores personalizada usada en las part√≠culas
	const colorVar = {
		"glow-turquoise-blue-30": "#2cc9dd", // Azul turquesa brillante
		"glow-purple-pizzazz-60": "#db15c4", // Rosa p√∫rpura vibrante
	};

	// üß† Configuraci√≥n de part√≠culas, definida con useMemo para optimizar el rendimiento
	const options: ISourceOptions = useMemo(
		() => ({
			particles: {
				// üé® Colores que alternan entre los dos tonos definidos
				color: {
					value: [
						colorVar["glow-purple-pizzazz-60"],
						colorVar["glow-turquoise-blue-30"],
					],
				},

				// üí´ Movimiento de las part√≠culas
				move: {
					enable: true, // Habilita el movimiento
					speed: 4, // Velocidad base
					outModes: { default: "destroy" }, // Destruye la part√≠cula al salir del canvas
					path: {
						enable: true, // Usa trayectorias poligonales
						generator: "polygonPathGenerator", // Generador de trayectorias poligonales
						options: { sides: 9, turnSteps: 40, angle: 30 }, // Define la forma y curva del movimiento
					},
					trail: {
						enable: true, // Deja un rastro al moverse
						length: 12, // Largo del rastro
						fill: { color: "#000" }, // Color de relleno del rastro
					},
				},

				number: { value: 0 }, // No genera part√≠culas por defecto (solo mediante emisores)
				opacity: { value: 1 }, // Opacidad completa
				shape: { type: "circle" }, // Forma circular de las part√≠culas
				size: { value: 3 }, // Tama√±o de las part√≠culas peque√±as

				// ‚è≥ Ciclo de vida de las part√≠culas
				life: {
					duration: {
						sync: true,
						value: 9, // Duraci√≥n de vida en segundos
					},
					count: 1, // La part√≠cula se destruye una vez termina su vida
				},
			},

			// üñ§ Fondo negro del canvas
			background: { color: "#000000" },

			// üéØ Emisores: generan part√≠culas desde puntos o √°reas espec√≠ficas
			emitters: [
				// üîπ Primer emisor: centro del canvas, genera part√≠culas de movimiento r√°pido
				{
					rate: { quantity: 1, delay: 0.5 }, // Genera 1 part√≠cula cada 0.5s
					position: { x: 50, y: 50 }, // Posici√≥n central (en porcentaje del canvas)
				},
				// üîπ Segundo emisor: emite part√≠culas lentas con efecto difuminado por todo el canvas
				{
					rate: { quantity: 2, delay: 0.5 }, // Genera menos part√≠culas pero de manera constante
					position: { x: 50, y: 50 }, // Tambi√©n centrado
					size: { width: 100, height: 100 }, // Ocupa todo el canvas

					particles: {
						zIndex: { value: 10 }, // üëà Se dibuja sobre las dem√°s capas
						color: {
							value: [
								colorVar["glow-purple-pizzazz-60"],
								colorVar["glow-turquoise-blue-30"],
							],
						},
						size: { width: 100, height: 50 }, // Tama√±os m√°s variados
						opacity: { value: { min: 0.02, max: 0.08 } }, // Muy sutiles y suaves visualmente

						move: {
							enable: true,
							speed: { min: 0.05, max: 0.3 }, // Movimiento muy lento y fluido
							direction: "none",
							straight: false,
							outModes: { default: "out" }, // Sale del canvas sin destruirse
							random: true, // Movimiento aleatorio
							drift: { min: -2, max: 2 }, // Peque√±a oscilaci√≥n (efecto de humo o neblina)
						},

						// ‚è≥ Vida m√°s corta para part√≠culas lentas y difusas
						life: {
							duration: {
								sync: true,
								value: 7, // Viven 7 segundos
							},
							count: 1, // Se destruyen al finalizar su duraci√≥n
						},
					},
				},
			],
		}),
		[]
	);

	// üß± Evita renderizar el componente hasta que el motor est√© inicializado
	if (!init) return null;

	// ü™Ñ Renderiza el canvas de part√≠culas con las opciones configuradas
	return <Particles id="tsparticles" options={options} />;
}
